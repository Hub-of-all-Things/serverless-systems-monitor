service: system-status-pooler

custom:
  postmanTopicName: PostmanStatus
  slackTopicName: SlackMessages
  slackTopicArn:
    Fn::Join:
      - ""
      - - "arn:aws:sns:"
        - Ref: "AWS::Region"
        - ":"
        - Ref: "AWS::AccountId"
        - ":SlackMessages"
  postmanTopicArn:
    Fn::Join:
      - ""
      - - "arn:aws:sns:"
        - Ref: "AWS::Region"
        - ":"
        - Ref: "AWS::AccountId"
        - ":PostmanStatus"
  awsAccountId:
    Ref: AWS::AccountId

provider:
  name: aws
  runtime: java8
  region: eu-west-1
  stage: dev
  memorySize: 512
  versionFunctions: false
  timeout: 10
  logRetentionInDays: 2
  endpointType: regional
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource:
        - Ref: "PostmanSNSTopic"
        - Ref: "SlackSNSTopic"

package:
  individually: true
  artifact: artifacts/status-monitor.jar

functions:
  collectionTrigger:
    handler: handler.postmanCollectionRunner
    timeout: 30
    environment:
      POSTMAN_API_KEY: ${env:POSTMAN_API_KEY}
      SNS_TOPIC: ${self:custom.postmanTopicArn}
    runtime: nodejs6.10
    package:
      individually: true
      artifact: artifacts/newman.zip
    events:
      - http:
          path: newman/run
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                collection: true
                environment: true
                

  collectionSchedule:
    handler: handler.postmanCollectionRunner
    timeout: 300
    environment:
      POSTMAN_API_KEY: ${env:POSTMAN_API_KEY}
      SNS_TOPIC: ${self:custom.postmanTopicArn}
    package:
      individually: true
      artifact: artifacts/newman.zip
    events:
      - schedule:
          rate: cron(0 12 * * ? *)
          enabled: false
          input:
            collection: 110376-cd628c63-58cb-51d8-b983-4ac1e44e94c5
            environment: 110376-6c3fa672-673a-6cfa-59b5-4a3f2705119b

  postmanNotificationToSlack:
    handler: org.hatdex.postman.ProcessNewmanNotification::handle
    environment:
      SNS_TOPIC: ${self:custom.slackTopicArn}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":PostmanStatus"
          topicName: PostmanStatus

  slackNotification:
    handler: org.hatdex.slack.PostMessageHandler::handle
    environment:
      SLACK_API_KEY: ${env:SLACK_API_KEY}
      SLACK_CHANNEL: ${env:SLACK_CHANNEL}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":SlackMessages"
          topicName: SlackMessages

resources:
  Resources:
    PostmanSNSTopic:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: ${self:custom.postmanTopicName}
    SlackSNSTopic:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: ${self:custom.slackTopicName}
    # SlackNotificationsTopic:
    #   Type: AWS::SNS::Topic
    #   Properties: 
    #     TopicName: ${self:custom.slackTopicName}
    # TodosDynamoDbTable:
    #   Type: 'AWS::DynamoDB::Table'
    #   Properties:
    #     AttributeDefinitions:
    #       -
    #         AttributeName: id
    #         AttributeType: S
    #     KeySchema:
    #       -
    #         AttributeName: id
    #         KeyType: HASH
    #     ProvisionedThroughput:
    #       ReadCapacityUnits: 1
    #       WriteCapacityUnits: 1
    #     TableName: 'todos2'

