service: system-status-pooler

provider:
  name: aws
  runtime: java8
  region: eu-west-1
  stage: dev
  memorySize: 512
  versionFunctions: false
  timeout: 10
  logRetentionInDays: 2
  endpointType: regional
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource:
        Fn::Join:
          - ":"
          - - "arn:aws:sns"
            - Ref: "AWS::Region"
            - Ref: "AWS::AccountId"
            - "NewmanCollectionSNSTopic2"

package:
  individually: true
  # artifact: artifacts/status-monitor.jar

functions:
  collectionTrigger:
    handler: handler.postmanCollectionRunner
    timeout: 30
    environment:
      POSTMAN_API_KEY: ***REMOVED***
      SNS_TOPIC:
        Ref: "NewmanCollectionSNSTopic2"
    runtime: nodejs6.10
    package:
      individually: true
      artifact: artifacts/newman.zip
    events:
      - http:
          path: newman/run
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                collection: true
                environment: true
                

  collectionSchedule:
    handler: handler.postmanCollectionRunner
    timeout: 300
    environment:
      POSTMAN_API_KEY: ***REMOVED***
      SNS_TOPIC:
        Ref: "NewmanCollectionSNSTopic2"
    package:
      individually: true
      artifact: artifacts/newman.zip
    events:
      - schedule:
          rate: cron(0 12 * * ? *)
          enabled: false
          input:
            collection: 110376-cd628c63-58cb-51d8-b983-4ac1e44e94c5
            environment: 110376-6c3fa672-673a-6cfa-59b5-4a3f2705119b

  postmanStatus:
    handler: todos.postman.GetStatusHandler::handle
    environment:
      POSTMAN_API_KEY: ***REMOVED***
    events:
      - http:
          path: postman/status
          method: get
          cors: true

  postmanNotificationToSlack:
    handler: org.hatdex.postman.ProcessNewmanNotification::handle
    environment:
      SNS_TOPIC:
        Ref: "SlackNotificationsTopic"
    events:
      - sns:
        Ref: "NewmanCollectionSNSTopic2"

  slackNotification:
    handler: org.hatdex.slack.PostMessageHandler::handle
    environment:
      SLACK_API_KEY: ***REMOVED***
      SLACK_CHANNEL: ***REMOVED***
    events:
      - sns:
        Ref: "SlackNotificationsTopic"
    
    # travisStatus:
    #   handler: todos.travis.GetStatusHandler::handle
    #   environment:
    #     TRAVIS_API_KEY: 8Ior5kc9vSLT7APMbhlJEw
    #   events:
    #     - http:
    #         path: travis/status
    #         method: get
    #         cors: true
    # ping:
    #   handler: todos.handler.PingPongHandler::handle
    #   events:
    #     - http:
    #         path: ping
    #         method: post
    #         cors: true

    # readAll:
    #   handler: todos.handler.GetAllHandler::handle
    #   events:
    #     - http:
    #         path: todos
    #         method: get
    #         cors: true
    # create:
    #   handler: todos.handler.CreateHandler::handle
    #   events:
    #     - http:
    #         path: todos
    #         method: post
    #         cors: true

resources:
  Resources:
    NewmanCollectionSNSTopic2:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: NewmanCollectionSNSTopic2
    SlackNotificationsTopic:
      Type: AWS::SNS::Topic
      Properties: 
        TopicName: SlackNotificationsTopic
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'todos2'

